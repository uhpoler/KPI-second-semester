

def find_minimum_route(distances, city_names):
    num_cities = len(distances)
    visited = [False] * num_cities
    route = []
    current_city = 0  # Початкове місто (Амстердам)
    total_distance = 0

    visited[current_city] = True
    route.append(current_city)

    while len(route) < num_cities:
        nearest_city = None
        nearest_distance = float('inf')

        for city in range(num_cities):
            if not visited[city] and distances[current_city][city] < nearest_distance:
                nearest_city = city
                nearest_distance = distances[current_city][city]

        if nearest_city is None:
            break

        visited[nearest_city] = True
        route.append(nearest_city)
        total_distance += nearest_distance
        current_city = nearest_city

    # Додавання повернення до початкового міста
    route.append(0)  # Початкове місто
    total_distance += distances[current_city][0]

    return route, total_distance


# Таблиця відстаней між містами

distances = [
    [0, 78, 64, 48, 122, 111, 32, 181, 105, 115, 88, 32, 161, 98, 53],
    [78, 0, 24, 61, 110, 77, 101, 246, 51, 109, 124, 73, 197, 113, 84],
    [64, 24, 0, 68, 143, 108, 87, 236, 82, 136, 131, 60, 204, 119, 88],
    [48, 61, 68, 0, 91, 81, 41, 187, 74, 90, 68, 59, 141, 65, 28],
    [122, 110, 143, 91, 0, 39, 127, 253, 59, 66, 115, 139, 180, 84, 112],
    [111, 77, 108, 81, 39, 0, 115, 262, 28, 81, 130, 128, 194, 99, 100],
    [32, 101, 87, 41, 127, 115, 0, 154, 109, 112, 77, 54, 150, 87, 38],
    [181, 246, 236, 187, 253, 262, 154, 0, 255, 206, 144, 203, 148, 173, 175],
    [105, 51, 82, 74, 59, 28, 109, 255, 0, 95, 133, 121, 206, 114, 93],
    [115, 109, 136, 90, 66, 81, 112, 206, 95, 0, 69, 133, 134, 24, 81],
    [88, 124, 131, 68, 115, 130, 77, 144, 133, 69, 0, 110, 75, 36, 48],
    [32, 73, 60, 59, 139, 128, 54, 203, 121, 133, 110, 0, 182, 115, 70],
    [161, 197, 204, 141, 180, 194, 150, 148, 206, 134, 75, 182, 0, 99, 121],
    [98, 113, 119, 65, 84, 99, 87, 173, 114, 24, 36, 115, 99, 0, 56],
    [53, 84, 88, 28, 112, 100, 38, 175, 93, 81, 48, 70, 121, 56, 0]
]


"""
distances = [
    [0, 78, 64, 48, 122, 111, 32, 181, 105, 115, 88, 32],
    [78, 0, 24, 61, 110, 77, 101, 246, 51, 109, 124, 73],
    [64, 24, 0, 68, 143, 108, 87, 236, 82, 136, 131, 60],
    [48, 61, 68, 0, 91, 81, 41, 187, 74, 90, 68, 59],
    [122, 110, 143, 91, 0, 39, 127, 253, 59, 66, 115, 139],
    [111, 77, 108, 81, 39, 0, 115, 262, 28, 81, 130, 128],
    [32, 101, 87, 41, 127, 115, 0, 154, 109, 112, 77, 54],
    [181, 246, 236, 187, 253, 262, 154, 0, 255, 206, 144, 203],
    [105, 51, 82, 74, 59, 28, 109, 255, 0, 95, 133, 121],
    [115, 109, 136, 90, 66, 81, 112, 206, 95, 0, 69, 133],
    [88, 124, 131, 68, 115, 130, 77, 144, 133, 69, 0, 110],
    [32, 73, 60, 59, 139, 128, 54, 203, 121, 133, 110, 0]
    ]
"""


# Масив з назвами міст
city_names = [
    "Амстердам", "Роттердам", "Гаага", "Утрехт", "Ейндговен", "Тілбург", "Алмере", "Гронінген", "Бреда",
    "Неймеген", "Апелдорн", "Гарлем", "Енсхеде", "Арнем", "Амерсфорт"
]

def format_route(route, city_names):
    formatted_route = 'Маршрут: ' + ' → '.join(city_names[city] for city in route) + f', Довжина: {total_distance}км'
    return formatted_route

# Знаходження мінімального маршруту
route, total_distance = find_minimum_route(distances, city_names)

# Форматування виводу
formatted_route = format_route(route, city_names)
print(formatted_route)
